<?xml version="1.0" encoding="UTF-8"?>

<project name="UEdit - Unidad Editorial" default="build">
  <import file="build-common.xml"/>

  <target name="build" depends="prepare,phploc,pdepend,phpmd-ci,phpcs-ci,phpcpd,apigen,phpspec-ci,phpdox"/>

  <target name="revision" depends="config,lint,phploc,phpcs,phpmd,phpcpd,phpspec"/>

  <target name="clean" description="Cleanup build artifacts">
    <delete dir="${vendors.build.path}/api"/>
    <delete dir="${vendors.build.path}/doc"/>
    <delete dir="${vendors.build.path}/coverage"/>
    <delete dir="${vendors.build.path}/logs"/>
    <delete dir="${vendors.build.path}/pdepend"/>
  </target>

  <target name="prepare" depends="config,clean" description="Prepare for build">
    <mkdir dir="${vendors.build.path}/api"/>
    <mkdir dir="${vendors.build.path}/doc"/>
    <mkdir dir="${vendors.build.path}/coverage"/>
    <mkdir dir="${vendors.build.path}/logs"/>
    <mkdir dir="${vendors.build.path}/pdepend"/>
    <mkdir dir="${vendors.build.path}/phpdox"/>
  </target>

  <target name="config" depends="config-build,config-common" hidden="true">
    <!-- Momntando rutas de vendors -->
    <php function="str_replace" returnProperty="vendors.path.packages">
        <param value=","/>
        <param value=" ${vendors.path.version}/"/>
        <param value="${vendors.packages}"/>
    </php>
    <property name="vendors.path.packages" value="${vendors.path.version}/${vendors.path.packages}" override="true" />
    <php function="str_replace" returnProperty="vendors.list.packages">
        <param value=" "/>
        <param value=","/>
        <param value="${vendors.path.packages}"/>
    </php>
  </target>

  <target name="lint" depends="config" description="Perform syntax check of sourcecode files">
    <foreach list="${vendors.path.packages}" param="lint.path" target="lint-path" delimiter=" " />
  </target>

  <target name="lint-path" hidden="true" >
    <apply executable="php" checkreturn="true">
      <arg value="-l" />
      <fileset dir="${lint.path}">
        <include name="**/*.php" />
        <exclude name="**/Lib/Kaltura/**" />
      </fileset>
    </apply>
  </target>

  <target name="phploc" depends="config" description="Measure project size using PHPLOC">
    <property name="command" value='${vendors.build.tools}/phploc' override="true" />
    <property name="command" value='${command} --count-tests' override="true" />
    <property name="command" value='${command} --log-csv ${vendors.build.path}/logs/phploc.csv' override="true" />
    <property name="command" value='${command} --log-xml ${vendors.build.path}/logs/phploc.xml' override="true" />
    <property name="command" value='${command} ${vendors.path.packages}' override="true" />

    <exec command='${command}' passthru="true" />
  </target>

  <target name="phpmd" depends="config"
          description="Perform project mess detection using PHPMD and print human readable output. Intended for usage on the command line before committing.">
    <property name="command" value='${vendors.build.tools}/phpmd' override="true" />
    <property name="command" value='${command} ${vendors.list.packages}' override="true" />
    <property name="command" value='${command} text' override="true" />
    <property name="command" value='${command} phpmd.xml' override="true" />

    <exec command='${command}' passthru="true" />
  </target>

  <target name="phpmd-ci" depends="config"
          description="Perform project mess detection using PHPMD creating a log file for the continuous integration server">
    <property name="command" value='${vendors.build.tools}/phpmd' override="true" />
    <property name="command" value='${command} ${vendors.list.packages}' override="true" />
    <property name="command" value='${command} xml' override="true" />
    <property name="command" value='${command} phpmd.xml' override="true" />
    <property name="command" value='${command} --reportfile ${vendors.build.path}/logs/pmd.xml' override="true" />

    <exec command='${command}' />

  </target>

  <target name="phpcs" depends="config"
          description="Find coding standard violations using PHP_CodeSniffer and print human readable output. Intended for usage on the command line before committing.">
    <property name="command" value='${vendors.build.tools}/phpcs' override="true" />
    <property name="command" value='${command} --extensions=php' override="true" />
    <property name="command" value='${command} --standard=phpcs.xml' override="true" />
    <property name="command" value='${command} ${vendors.path.packages}' override="true" />

    <exec command='${command}' passthru="true" />

  </target>

  <target name="phpcs-ci" depends="config"
          description="Find coding standard violations using PHP_CodeSniffer creating a log file for the continuous integration server">
    <property name="command" value='${vendors.build.tools}/phpcs' override="true" />
    <property name="command" value='${command} --extensions=php' override="true" />
    <property name="command" value='${command} --standard=phpcs.xml' override="true" />
    <property name="command" value='${command} --report=checkstyle' override="true" />
    <property name="command" value='${command} --report-file=${vendors.build.path}/logs/checkstyle.xml' override="true" />
    <property name="command" value='${command} ${vendors.path.packages}' override="true" />

    <exec command='${command}'  output="/dev/null" />

  </target>

  <target name="phpcpd" depends="config"
          description="Find duplicate code using PHPCPD">
    <property name="command" value='${vendors.build.tools}/phpcpd' override="true" />
    <property name="command" value='${command} --log-pmd ${vendors.build.path}/logs/pmd-cpd.xml' override="true" />
    <property name="command" value='${command} ${vendors.path.packages}' override="true" />

    <exec command='${command}' passthru="true" />

  </target>

  <target name="pdepend" depends="config" description="Calculate software metrics using PHP_Depend">
    <property name="command" value='${vendors.build.tools}/pdepend' override="true" />
    <property name="command" value='${command} --jdepend-xml=${vendors.build.path}/logs/jdepend.xml' override="true" />
    <property name="command" value='${command} --jdepend-chart=${vendors.build.path}/pdepend/dependencies.svg' override="true" />
    <property name="command" value='${command} --overview-pyramid=${vendors.build.path}/pdepend/overview-pyramid.svg' override="true" />
    <property name="command" value='${command} ${vendors.list.packages}' override="true" />

    <exec command='${command}' />

  </target>

  <target name="phpdox" depends="config"
          description="Generate API documentation using phpDox">
    <exec executable='${vendors.build.tools}/phpdox' passthru="true" />
  </target>

  <target name="phpunit" depends="config" description="Run unit tests with PHPUnit">
    <exec executable='${vendors.build.tools}/phpunit' passthru="true" />
  </target>

  <target name="phpspec" depends="config" description="Run tests with PHPSpec">
    <property name="command" value='${vendors.build.tools}/phpspec' override="true" />
    <property name="command" value='${command} run' override="true" />
    <property name="command" value='${command} --no-interaction' override="true" />

    <exec command='${command}' passthru="true" />

  </target>

  <target name="phpspec-ci" depends="config" description="Run tests with PHPSpec">
    <property name="command" value='${vendors.build.tools}/phpspec' override="true" />
    <property name="command" value='${command} run' override="true" />
    <property name="command" value='${command} --format=junit' override="true" />
    <property name="command" value='${command} --no-interaction' override="true" />

    <exec command='${command}' passthru="true" output="${vendors.build.path}/logs/junit.xml" />

    <!-- Eso es para quitar los mensajes que genera phpspec y que se aÃ±aden al fichero -->
    <reflexive file="${vendors.build.path}/logs/junit.xml">
      <filterchain>
        <replaceregexp>
          <regexp pattern='&lt;/testsuites&gt;.*\n.*' replace="&lt;/testsuites&gt;" />
        </replaceregexp>
      </filterchain>
    </reflexive>
  </target>

  <target name="apigen" depends="config" description="Generate API documentation using ApiGen">
    <property name="command" value='${vendors.build.tools}/apigen' override="true" />
    <property name="command" value='${command} --source ${vendors.list.packages}' override="true" />
    <property name="command" value='${command} --destination ${vendors.build.path}/api' override="true" />
    <property name="command" value='${command} --title "UEdit"' override="true" />
    <property name="command" value='${command} --progressbar no' override="true" />
    <property name="command" value='${command} --exclude */Lib/Kaltura/*' override="true" />
    <property name="command" value='${command} --exclude */Resources/*' override="true" />

    <exec command='${command}' passthru="true" />

  </target>

</project>
