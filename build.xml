<?xml version="1.0" encoding="UTF-8"?>

<project name="QA artifacts builder" default="build">

  <target name="build" depends="prepare,phploc,pdepend,ci:phpmd,ci:phpcs,phpcpd,apigen,ci:phpspec,phpdox" />

  <target name="check" depends="config,lint,phploc,phpcs,phpmd,phpcpd,phpspec" />

  <target name="clean" description="Cleanup build artifacts">
    <delete dir="${phpqa.build.path}/api" />
    <delete dir="${phpqa.build.path}/doc" />
    <delete dir="${phpqa.build.path}/coverage" />
    <delete dir="${phpqa.build.path}/logs" />
    <delete dir="${phpqa.build.path}/pdepend" />
  </target>

  <target name="prepare" depends="config,clean" description="Prepare for build">
    <mkdir dir="${phpqa.build.path}/api" />
    <mkdir dir="${phpqa.build.path}/doc" />
    <mkdir dir="${phpqa.build.path}/coverage" />
    <mkdir dir="${phpqa.build.path}/logs" />
    <mkdir dir="${phpqa.build.path}/pdepend" />
    <mkdir dir="${phpqa.build.path}/phpdox" />
  </target>

  <target name="config" hidden="true">
    <property file="build.ini" />
    <property file="build.ini.dist" />

    <!-- defaults -->
    <property name="phpqa.tools.path" value="${vendors.path}/bin" />
    <property name="phpqa.build.path" value="build" />
    <property name="phpqa.sources" value="src" />

    <!-- Montando rutas -->
    <php function="str_replace" returnProperty="phpqa.sources">
      <param value=" " /> 
      <param value="" /> 
      <param value="${phpqa.sources}" />
    </php>
    <php function="str_replace" returnProperty="phpqa.sources">
      <param value="," />
      <param value=" ${phpqa.prefix.path}/" />
      <param value="${phpqa.sources}" />
    </php>
    <property name="phpqa.sources" value="${phpqa.prefix.path}/${phpqa.sources}" override="true" />
    <php function="str_replace" returnProperty="phpqa.sources.list">
      <param value=" "/>
      <param value=","/>
      <param value="${phpqa.sources}"/>
    </php>
  </target>

  <!-- Check sintax error -->
  <target name="lint" depends="config" description="Perform syntax check of sourcecode files">
    <foreach list="${phpqa.sources}" param="lint.path" target="lint-path" delimiter=" " />
  </target>

  <target name="lint-path" hidden="true" >
    <apply executable="php" checkreturn="true">
      <arg value="-l" />
      <fileset dir="${lint.path}">
        <include name="**/*.php" />
        <!-- exclude name="**/path/to/exclude/**" /-->
      </fileset>
    </apply>
  </target>

  <target name="phploc" depends="config" description="Measure project size using PHPLOC">
    <property name="command" value='${phpqa.tools.path}/phploc' override="true" />
    <property name="command" value='${command} --count-tests' override="true" />
    <property name="command" value='${command} --log-csv ${phpqa.build.path}/logs/phploc.csv' override="true" />
    <property name="command" value='${command} --log-xml ${phpqa.build.path}/logs/phploc.xml' override="true" />
    <property name="command" value='${command} ${phpqa.sources}' override="true" />

    <exec command='${command}' passthru="true" />
  </target>

  <target name="phpmd" depends="config"
          description="Perform project mess detection using PHPMD and print human readable output. Intended for usage on the command line before committing.">
    <property name="command" value='${phpqa.tools.path}/phpmd' override="true" />
    <property name="command" value='${command} ${phpqa.sources.list}' override="true" />
    <property name="command" value='${command} text' override="true" />
    <property name="command" value='${command} phpmd.xml' override="true" />

    <exec command='${command}' passthru="true" />
  </target>

  <target name="ci:phpmd" depends="config"
          description="Perform project mess detection using PHPMD creating a log file for the continuous integration server">
    <property name="command" value='${phpqa.tools.path}/phpmd' override="true" />
    <property name="command" value='${command} ${phpqa.sources.list}' override="true" />
    <property name="command" value='${command} xml' override="true" />
    <property name="command" value='${command} phpmd.xml' override="true" />
    <property name="command" value='${command} --reportfile ${phpqa.build.path}/logs/pmd.xml' override="true" />

    <exec command='${command}' />

  </target>

  <target name="phpcs" depends="config"
          description="Find coding standard violations using PHP_CodeSniffer and print human readable output. Intended for usage on the command line before committing.">
    <property name="command" value='${phpqa.tools.path}/phpcs' override="true" />
    <property name="command" value='${command} --extensions=php' override="true" />
    <property name="command" value='${command} --standard=phpcs.xml' override="true" />
    <property name="command" value='${command} ${phpqa.sources}' override="true" />

    <exec command='${command}' passthru="true" />

  </target>

  <target name="ci:phpcs" depends="config"
          description="Find coding standard violations using PHP_CodeSniffer creating a log file for the continuous integration server">
    <property name="command" value='${phpqa.tools.path}/phpcs' override="true" />
    <property name="command" value='${command} --extensions=php' override="true" />
    <property name="command" value='${command} --standard=phpcs.xml' override="true" />
    <property name="command" value='${command} --report=checkstyle' override="true" />
    <property name="command" value='${command} --report-file=${phpqa.build.path}/logs/checkstyle.xml' override="true" />
    <property name="command" value='${command} ${phpqa.sources}' override="true" />

    <exec command='${command}'  output="/dev/null" />

  </target>

  <target name="phpcpd" depends="config"
          description="Find duplicate code using PHPCPD">
    <property name="command" value='${phpqa.tools.path}/phpcpd' override="true" />
    <property name="command" value='${command} --log-pmd ${phpqa.build.path}/logs/pmd-cpd.xml' override="true" />
    <property name="command" value='${command} ${phpqa.sources}' override="true" />

    <exec command='${command}' passthru="true" />

  </target>

  <target name="pdepend" depends="config" description="Calculate software metrics using PHP_Depend">
    <property name="command" value='${phpqa.tools.path}/pdepend' override="true" />
    <property name="command" value='${command} --jdepend-xml=${phpqa.build.path}/logs/jdepend.xml' override="true" />
    <property name="command" value='${command} --jdepend-chart=${phpqa.build.path}/pdepend/dependencies.svg' override="true" />
    <property name="command" value='${command} --overview-pyramid=${phpqa.build.path}/pdepend/overview-pyramid.svg' override="true" />
    <property name="command" value='${command} ${phpqa.sources.list}' override="true" />

    <exec command='${command}' />

  </target>

  <target name="phpdox" depends="config"
          description="Generate API documentation using phpDox">
    <exec executable='${phpqa.tools.path}/phpdox' passthru="true" />
  </target>

  <target name="phpunit" depends="config" description="Run unit tests with PHPUnit">
    <exec executable='${phpqa.tools.path}/phpunit' passthru="true" />
  </target>

  <target name="phpspec" depends="config" description="Run tests with PHPSpec">
    <property name="command" value='${phpqa.tools.path}/phpspec' override="true" />
    <property name="command" value='${command} run' override="true" />
    <property name="command" value='${command} --no-interaction' override="true" />

    <exec command='${command}' passthru="true" />

  </target>

  <target name="ci:phpspec" depends="config" description="Run tests with PHPSpec">
    <property name="command" value='${phpqa.tools.path}/phpspec' override="true" />
    <property name="command" value='${command} run' override="true" />
    <property name="command" value='${command} --format=junit' override="true" />
    <property name="command" value='${command} --no-interaction' override="true" />

    <exec command='${command}' passthru="true" output="${phpqa.build.path}/logs/junit.xml" />

    <!-- Eso es para quitar los mensajes que genera phpspec y que se aÃ±aden al fichero -->
    <reflexive file="${phpqa.build.path}/logs/junit.xml">
      <filterchain>
        <replaceregexp>
          <regexp pattern='&lt;/testsuites&gt;.*\n.*' replace="&lt;/testsuites&gt;" />
        </replaceregexp>
      </filterchain>
    </reflexive>
  </target>

  <target name="apigen" depends="config" description="Generate API documentation using ApiGen">
    <property name="command" value='${phpqa.tools.path}/apigen generate' override="true" />
    <property name="command" value='${command} --source ${phpqa.sources.list}' override="true" />
    <property name="command" value='${command} --destination ${phpqa.build.path}/api' override="true" />
    <property name="command" value='${command} --title "API Doc"' override="true" />
    <property name="command" value='${command} --progressbar no' override="true" />
    <!-- property name="command" value='${command} __exclude */Lib/Kaltura/*' override="true" / -->
    <!-- property name="command" value='${command} __exclude */Resources/*' override="true" / -->

    <exec command='${command}' passthru="true" />

  </target>

</project>
